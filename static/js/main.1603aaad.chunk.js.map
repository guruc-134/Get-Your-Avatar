{"version":3,"sources":["components/Info/Info.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Info","wantInfo","setWantInfo","className","onClick","App","useState","seed","setSeed","type","setType","image","setImage","buttonTxt","setBtnTxt","setWantinfo","useEffect","e","src","alt","value","readOnly","placeholder","onChange","event","preventDefault","target","htmlFor","name","id","copyText","document","querySelector","select","console","log","setSelectionRange","execCommand","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"kPA2BeA,MAzBf,YAAqC,EAAtBC,SAAuB,IAAdC,EAAa,EAAbA,YAKpB,OACI,sBAAKC,UAAU,OAAf,UACI,sDACA,sBAAKA,UAAU,UAAf,UACI,mBAAGA,UAAU,WAAb,gCACA,mBAAGA,UAAU,SAAb,+JACA,mBAAGA,UAAU,WAAb,8BACA,mBAAGA,UAAU,SAAb,mFACA,mBAAGA,UAAU,SAAb,wEACA,mBAAGA,UAAU,SAAb,8FACA,mBAAGA,UAAU,SAAb,iJAEJ,wBAAQC,QAhBK,WAEjBF,GAAY,IAcR,yBACA,mBAAGC,UAAU,cAAb,uCC8DGE,MA9Ef,WAAgB,IAAD,EACQC,mBAAS,QADjB,mBACRC,EADQ,KACHC,EADG,OAEQF,mBAAS,UAFjB,mBAERG,EAFQ,KAEHC,EAFG,OAGUJ,mBAAS,oCAAD,OAAqCG,EAArC,YAA6CF,EAA7C,SAHlB,mBAGRI,EAHQ,KAGFC,EAHE,OAIgBN,mBAAS,qBAJzB,mBAIRO,EAJQ,KAIGC,EAJH,OAKgBR,oBAAS,GALzB,mBAKRL,EALQ,KAKCc,EALD,KAuCb,OAPAC,qBAAU,WAERL,EAAK,2CAAuCF,EAAvC,YAA+CF,EAA/C,QACLK,EAASD,GACTG,EAAU,uBACV,CAACP,EAAKE,EAAKM,IAGX,sBAAMZ,UAAY,MAAlB,UACI,wBAAQA,UAAU,WAAWC,QAbV,SAACa,GAExBF,GAAY,IAWR,SAAwD,qBAAKG,IAAI,mEAE/DjB,EAAS,cAAC,EAAD,CAAMA,SAAYA,EAAUC,YAAaa,IAAgB,KAEtE,qBAAKZ,UAAY,SAAjB,SACE,2DAEF,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,aAAae,IAAG,2CAAuCT,EAAvC,YAA+CF,EAA/C,QAA2DY,IAAI,4CAC9F,uBAAOhB,UAAU,iBAAiBiB,MAAK,mBAAcT,EAAd,gBAA2BJ,EAA3B,YAAmCE,EAAnC,MAA6CY,UAAQ,OAGhG,sBAAKlB,UAAU,YAAf,UACI,uDACA,uBAAOA,UAAU,gBAAgBM,KAAK,OAAOa,YAAY,OAAOC,SA1C/C,SAACC,GAExBA,EAAMC,iBACNjB,EAAQgB,EAAME,OAAON,UAwCf,uBAAOO,QAAQ,QAAf,8BACA,yBAAQxB,UAAU,uBAAsByB,KAAK,QAAQC,GAAG,eAAeN,SAlDtD,SAACC,GAExBA,EAAMC,iBACNf,EAAQc,EAAME,OAAON,QA+Cf,UACE,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,yBAGF,wBAAQjB,UAAU,eAAeC,QAnDpB,WAEnB,IAAI0B,EAAWC,SAASC,cAAc,mBACtCF,EAASG,SACTC,QAAQC,IAAIL,GACZA,EAASM,kBAAkB,EAAG,OAC9BL,SAASM,YAAY,QACrBvB,EAAU,wBA4CJ,SACKD,QC/DAyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASmB,eAAe,SAM1BZ,M","file":"static/js/main.1603aaad.chunk.js","sourcesContent":["import React from 'react'\r\nimport './style.css'\r\nfunction Info({wantInfo,setWantInfo}){\r\n    const handleChange = () =>\r\n    {\r\n        setWantInfo(false)\r\n    }\r\n    return (\r\n        <div className='info'>\r\n            <h1> Info about the site</h1>\r\n            <div className='content'>\r\n                <p className='question'>What is this site?</p>\r\n                <p className='answer'>This site lets you enter a random name, choose from numerous categories of types of avatars, each value of the input name will generate an avatar</p>\r\n                <p className='question'> How to use it ?</p>\r\n                <p className='answer'>&rarr; enter any string consisting of alphabets, wait for a second...</p>\r\n                <p className='answer'>&rarr;  Select a category from the given types of  avatars</p>\r\n                <p className='answer'>&rarr;  click on \"Get Embedded HTML\" the image will be copied to your clip board</p>\r\n                <p className='answer'>&rarr;  now you will be having an image tag copied into your clipboard, paste it in your code and the avatar is ready to be used</p>\r\n            </div>\r\n            <button onClick={handleChange}> Lets Go !!</button>\r\n            <p className='author-info'>\r\n                made by : Guru Charan\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info\r\n","import React from 'react'\nimport {useState,useEffect} from 'react';\nimport './App.css';\nimport Info from './components/Info/Info.component';\nfunction App() {\n  var [seed,setSeed] = useState('seed');\n  var [type,setType] = useState('bottts');\n  var [image,setImage] = useState(`https://avatars.dicebear.com/api/${type}/${seed}.svg`)\n  var [buttonTxt, setBtnTxt] = useState('Get Embedded HTML')\n  var [wantInfo,setWantinfo] = useState(false)\n  \n  const handleChangeType = (event) =>\n  {\n    event.preventDefault()\n    setType(event.target.value)\n\n  }\n  const handleChangeSeed = (event) =>\n  {\n    event.preventDefault()\n    setSeed(event.target.value)\n  }\n\n  const copyTocursor = () =>\n  {\n    var copyText = document.querySelector('.avatar-img-src')\n    copyText.select();\n    console.log(copyText)\n    copyText.setSelectionRange(0, 99999)\n    document.execCommand(\"copy\");\n    setBtnTxt('copied to clipboard')\n  }\n  const handleInfoChange = (e)=>\n  {\n    setWantinfo(true)\n  }\n  useEffect(() =>\n  {\n    image = `https://avatars.dicebear.com/api/${type}/${seed}.svg`;\n    setImage(image)\n    setBtnTxt('Get Embedded HTML')\n  },[seed,type,setWantinfo])\n\n  return (\n    <div  className = 'app'>\n        <button className='info-btn' onClick={handleInfoChange}><img src=\"https://img.icons8.com/emoji/48/000000/information-emoji.png\"/></button>\n        {\n          wantInfo?<Info wantInfo = {wantInfo} setWantInfo={setWantinfo} />:null\n        }\n      <div className = 'header'>\n        <h1>Random Avatar Generator</h1>\n      </div>\n      <div className='image-displayer'>\n          <img className='avatar-img' src ={`https://avatars.dicebear.com/api/${type}/${seed}.svg`} alt='image for this text cannot be generated'/> \n          <input className='avatar-img-src' value={`<img src=${image} alt=${seed}-${type}/>`} readOnly/>\n          \n      </div>\n      <div className='userInput'>\n          <span>Your Avatar's name </span>\n          <input className='input-element' type='text' placeholder='name' onChange={handleChangeSeed}/>\n          <label htmlFor=\"types\"> Choose a type: </label>\n          <select className='select input-element'name=\"types\" id=\"avatar-types\" onChange={handleChangeType}>\n            <option value=\"bottts\">bottts</option>\n            <option value=\"male\">male</option>\n            <option value=\"female\">female</option>\n            <option value=\"human\">human</option>\n            <option value=\"identicon\">identicon</option>\n            <option value=\"initials\">initials</option>\n            <option value=\"avataaars\">avataaars</option>\n            <option value=\"jdenticon\">jdenticon</option>\n            <option value=\"gridy\">gridy</option>\n            <option value=\"micah\">micah</option>\n          </select>\n      </div>\n          <button className='download-btn' onClick={copyTocursor}>\n              {buttonTxt}\n          </button>\n\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}